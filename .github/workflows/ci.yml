name: CI/CD

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint-format:
    name: Lint & Format
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run lint check
        run: npm run lint:check

      - name: Run format check
        run: npm run format:check

  build:
    name: Build
    runs-on: ubuntu-latest
    environment: test
    needs: [lint-format]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

  unit-test:
    name: Unit Tests
    runs-on: ubuntu-latest
    environment: test
    needs: [build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test

  e2e-test:
    name: E2E Tests
    runs-on: ubuntu-latest
    environment: test
    needs: [build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run E2E tests
        run: npm run test:e2e:cov

      - name: Post coverage to Coveralls
        uses: coverallsapp/github-action@v2.3.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: coverage/lcov.info

  publish-image:
    name: Publish Docker image to GHCR
    runs-on: ubuntu-latest
    needs: [unit-test, e2e-test]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/flair-api:latest
            ghcr.io/${{ github.repository_owner }}/flair-api:${{ github.sha }}